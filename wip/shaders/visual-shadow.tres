[gd_resource type="VisualShader" load_steps=6 format=2]

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "color"

[sub_resource type="VisualShaderNodeExpression" id=7]
output_port_for_preview = 0
size = Vector2( 759.333, 574.833 )
expression = "o = 0.5+sin(TIME*3.0)/2.0
"

[sub_resource type="VisualShaderNodeInput" id=8]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeColorParameter" id=4]
uniform_name = "color"

[sub_resource type="VisualShaderNodeFloatParameter" id=5]
uniform_name = "radius"

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:10
	vec3 n_out10p0 = COLOR.rgb;

// Expression:11
	float n_out11p0;
	n_out11p0 = 0.0;
	{
		n_out11p0 = 0.5+sin(TIME*3.0)/2.0
		
	}

// Output:0
	COLOR.rgb = n_out10p0;
	COLOR.a = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -423.104, -109.679 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 700, 240 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( -160, 20 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( -120, -80 )
nodes/fragment/10/node = SubResource( 6 )
nodes/fragment/10/position = Vector2( 140, -80 )
nodes/fragment/11/node = SubResource( 7 )
nodes/fragment/11/position = Vector2( -300, 180 )
nodes/fragment/11/size = Vector2( 759.333, 574.833 )
nodes/fragment/11/input_ports = ""
nodes/fragment/11/output_ports = "0,0,o;"
nodes/fragment/11/expression = "o = 0.5+sin(TIME*3.0)/2.0
"
nodes/fragment/12/node = SubResource( 8 )
nodes/fragment/12/position = Vector2( 580, -120 )
nodes/fragment/connections = PackedInt32Array( 10, 0, 0, 0, 11, 0, 0, 1 )
