
** DONE 8:00 "my goal is to film the screenplay"
explain  "one more thing"
(need to explain scroll so i can read the text)



* TODO 5:10 "the way this is supposed to work"
(creating the blank line)

* fix right side of outline so it scrolls
* make sure i can save
* discover reload bug(s)
* should probably cut out a bunch of floundering here
* code review of =open= function
- worth talking about the data structures
- but in a coherent review of the architecture

* took forever to understand index
* 27:02 - talk about interval index
episode 11 - how the outliner works
* 9am - finish up the bugfix... thinking about what to film here

* "tickets"
** DONE bug: text added from repl gets discarded
   |(fix was to use insline instead of ins__cmd)
** DONE do not show macros in the repl
   |(fix was change to new_repl_line)
   |
** DONE fix the right side of outline so that it scrolls
   |HEIGHT (H)  was just set wrong
   |
** DONE =goz_UiList_= does not scroll correctly (cursor hidden when entering from bottom)
   |fixed by adding bounds checking to goz
   |


* TODO i set TSV=0 istead of 1 after deciding on 1


* what story do i have to tell here? "HOW DOES the macro playback work?"
- goal is to record the short
- this should have been easy
- after i got macros to record yesterday
- but first i needed it to save
  - wasn't saving the page
- final stretch but bugs kept getting in the way
  - i spent half an hour planning doing some long overdue planning



* commits
https://github.com/tangentstorm/jprez/commits/rejms-11
https://github.com/tangentstorm/j-kvm/commits/rejms-11

** mje.ijs: record macros, fix reload, shorten index           :jprez:
7601b956d75c00d3af26eb3a5cb71abe1cad6f80
** worlds.ijs: put ii,ihist,ehist in init                      :jprez:
7304f073d39fd9acacf64460abae0c9c73604a8e
** mje: extract inscmd verb                                    :jprez:
013cfd0a905b76931e034ca4a1e911424e513c05
** mje: don't show macros in repl                              :jprez:
c6b26645fe8e0bf3a6cea84d3499dc7a2d665fa7
** mje: fixed height of commands                               :jprez:
418e9c8e8f0d9e703830dadf0b35e6fa173bec13
** mje: play current macro on 'N' key                          :jprez:
3198ff44a3cf8abff2d942055c68e517054699a8
** mje: record repl state for each cmd on open                 :jprez:
36bb6617e4375977435c818f823f17aa659a8e6d
** mje: use macro start states                                 :jprez:
d81a0b88edeb591bc5f80cfbdc4ae7865c23e312
** ui/list: fix scroll position for goz                        :kvm:
2cb3e2f897a8daaead343aea429e8eed8a28c667
** ui/eidt: getstate/setstate                                  :kvm:
9b5295af1bb46b185d0322aaf8accd4a7541b6f1


* outline
** starting point
** spent some time planning
** problems right off the bat
** 



* what actually happened



 but first i have to save...

** first bug : ctrl-o doesn't reload
@12:26 10:08 .. "hrm" because ctrl-o doesn't work
11:17 not doing anything to r-open


** 
14:58 - not clearing the history...
@12:34 "this should not be here"
15:20 showing the wrong history problem


16:00 < trying to explain the index but it confuses me  >
17:00 - "15 lines?!?"
18:00 begin code review of 'open'
  25:10 finally understand what's actually happening
  27:00 interval index demo is too rambly
@1am  32:00 finally hit 9:00am
  33: planning inside code review (to enter macro)
36:00 end code review.
36:20 reflections: how to make livecoding interesting?? (long silences)

37:50 bug: history is still messed up. (but easy fix now)
  - should probably have cutaway for git commits

40:00 tmux config (cut this)


** 43:00 fix right side until it scrolls
44:19 shows recording a macro (is this a repeat?)

45:32 (13:21 on clock) <new bug - it doesn't save>
  48:00 (13:25) fix was inscmd, but still needed some work
  52:47 finally fix this bug
54:00 demo it saves (@13:30 clock)

** 
55:23 / @13:31 don't show macro in repl
57:41 - done

59:00, @13.37 height set wrong, move prev slide doesn't scroll correctly
1:01:00 @actually it's goz
@13:48 scroll position
@13:50 demo tilde..
@13:52 silly face, confusion about min/max
@13:54 can't cursor all the way up

1:08:00 @13:58 macro playback planning
1:12 (@14:06 thinking about how/when to do it)
@14:08 "don't have to move cursor. just press shift-n"

@14:11 successfully saving the macro
@14:13 but not playing correctly
@14:16 have to manually update children
@14:18:30 playing back macro super slow
@14:22 - 10x speed hack. ideas for speeding up redraws

@14:25 planning session : pre-play macros to get the start states
14:37 - implementing this went really smoothly after planning

@14:40 start of getstate/setstate for macro
@14:43 need the cursor position
@14:45 'make the memo thing'
@14:50 confused by explicit v) vs )v
@14:53 working demo for memo thing
(git commits)
@14:55 olr for memos
@14:56 <-- introduce a bug...
@14:59 show working olr

@15:00 now set starting state before playing
<git commit patch aside>

@15:07 "even this line illustrates the problem"
<include this>
15:08 except this current index is probably elsewhere... "dry"

<trying to demo the start state thing>
@15:11 here is where the bug manifests

@15:15 left it without actually evaluating
(not exactly necessary for recording a movie but ought to be there)




* clips at end

** starting point - keep
** planning - keep
**  "hit that line and the animation starts" -> <went back and forth>
** typing speed / two kinds of pauses (part of goal)
** can't just land on a macro line - these are stateful (going back and forth)
** need to know the start config the minute we land there
** "here is some bad code" - clear statement of the problem
** you want that stepping motion
** if somebody has edited the macro... (tests - but i didn't test this yet)
** more planning
** "and once we have this"... right side works / gola to film a screenplay
** why i need to fix scrolling
** 'fix scrolling' on plan
** first i want to save this
** ^s to save ... undo with git and ^o to load
** (demo the bug)
** demo again it's not reverting the file
** fix - fwd/back fixes it (keep the fix but cut itdown)
** but the next slide is screwy
