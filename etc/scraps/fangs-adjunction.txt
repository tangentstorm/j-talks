10:44:19        Fangs | mathematicians usually have an 'idea in mind' then they would write it down in terms of axioms and theorems                                                                                                                                             │
10:44:53        Fangs | to borrow CS terms, they have some semantic truth in mind and tried to write a syntatic truth for it                                                                                                                                                    │
10:45:23        Fangs | but very often the same 'phenomenon' are described by different subjects differently, so there's a sense that these ideas are independent of the syntax]                                                                                                
10:47:09        Fangs | idk if anyone here is a fan of category theory                                                                                                                                                                                                          │
10:47:29     lisbeths | that's fishy what does category theory have to do with it                                                                                                                                                                                               │
10:49:34        Fangs | I was going to say adjunction between two pairs of functors in some sense is an example of this                                                                                                                                                         


adjunction of two functors


10:58:27        Fangs | a vector is things you can add together, and multiply by a scalar
10:59:04        Fangs | so your idea of 'a vector is a tuple of real numbers' is valid, same with using foldl to multiply elements of a list by a constant
10:59:17        Fangs | tangentstorm: lets take an vector v, w, and a scalar c.. a linear map is a function that does this T(v+w) = T(v) + T(w), T(c*v) = c*T(v), it preserves what you can do with a vector
10:59:58        Fangs | in other words T takes in 1 vector and produces another vector
11:01:53        Fangs | now, a  bi-linear map K is a map that takes two vectors and produces a vector, and it does this:
 K(u+v,w) = K(u,w) + K(v,w)  and K(c*v,w) = c*K(v,w) on the first slot (i.e. linear in the first slot) and also linear in the second slot                │
11:03:07        Fangs | you might already know where I'm going with this
11:03:19        Fangs | if you fix w, and define K(_,w) this is a linear map
11:03:36        Fangs | K(v,_) ditto this too
11:04:57        Fangs | let's choose one slot... let's give names to the vectors too, so v in V, w in W, and Z is the target. K: VxW -> Z
11:05:33        Fangs | tangentstorm: for every w in W, you have a linear map K(_,w): V -> Z
11:07:35        Fangs | so there's a map from K(_,[insert here]): W -> LinearMaps(V,Z)
11:08:24        Fangs | so the set of bilinear maps may be thought of as the set of linear maps from W to LinMaps(V,Z).. in other words LinMaps(W,LinMaps(V,Z))
11:08:58        Fangs | now I'll have to explain what a tensor product is, or I can invoke the adjunction
11:09:33        Fangs | tangentstorm: here is an example of an adjunction, called the hom-tensor adjunction: LinMaps(V(x)W,Z) ~= LinMaps(W,LinMaps(V,Z))
11:09:59        Fangs | (in otherwords a tensor product is a way to turn bilinear maps into a linear map, thats their "use")
11:15:49        Fangs | K(_,[insert here]): W -> LinearMaps(V,Z) <-- tangentstorm: I'll write this map K(_,[_]) the square bracket is to let us know we will fill it in first
11:17:15        Fangs | now given a 'bilinear map' K(_,[_]): W -> LinMaps(V,Z), I can write a new map K^: V(x)W -> Z (K with a hat) defined this way K^(v(x)w) = K(_,[w])(v)
11:17:49        Fangs | and vice versa
11:18:09        Fangs | tangentstorm: so the hom tensor adjunction is just 'currying'
11:22:00        Fangs | (normally you start with K is a bilinear map on VxW, so its a linear map on V(x)W.. then you write down LinMaps(V(x)W,Z), and you (un?)curry to get a map in LinMaps(V,LinMaps(W,Z)
11:26:10 tangentstorm | what does V(x)W mean?                                                                                                                                                                                                                                   │
11:27:16        Fangs | its the tensor product of two vector spaces                                                                                                                                                                                                             │
11:27:41        Fangs | elements are sums of vectors that looks like v(x)w                                                                                                                                                                                                      │
11:27:57        Fangs | so typically something like v1(x)w1 + v2(x)w2, etc                                                                                                                                                                                                      │
11:28:42        Fangs | you can think of them as a k-tuple of n-tuples as a possible 'representation'. they're not quite matrices though                                                                                                                                        │
11:28:46 tangentstorm | what does v(x)w mean?                                                                                                                                                                                                                                   │
11:29:43        Fangs | tangentstorm: purely syntatically, v(x)w is a formal symbol you can write for every v in V and w in W. but a _possible_ 'practical' intepretation is that k-tuple of n-tuples                                                                           │
11:30:13        Fangs | tangentstorm: here's some 'rules' (v1+v2)(x)w = v1(x)w + v2(x)w, etc                                                                                                                                                                                    │
11:30:15 tangentstorm | is (x) a 2-argument function being applied to vectors v and w ?                                                                                                                                                                                         │
11:30:20        Fangs | indeed                                                                                                                                                                                                                                                  │
11:30:35        Fangs | (x): VxW -> V(x)W is a set map                                                                                                                                                                                                                          │
11:30:45        Fangs | and in V(x)W there is a sum and scalar multiplication                                                                                                                                                                                                   │
11:31:16 tangentstorm | VxW is the set of tuples where the first element is from V and the second is from W?                                                                                                                                                                    │
11:31:44        Fangs | err, let me try a concrete example for a model                                                                                                                                                                                                          │
11:32:20        Fangs | [1,2] (x) [3,4] = [1*[3,4], 2*[3,4]] = [[3,4],[6,8]]                                                                                                                                                                                                    │
11:32:39        Fangs | but remember, you need to allow SUMS of these expressions                                                                                                                                                                                               │
11:33:14 tangentstorm | is x that specific function or is that an example of a function that can be plugged in for x?                                                                                                                                                           │
11:33:45        Fangs | I write (x), usually you have a circle with a cross inside it                                                                                                                                                                                           │
11:33:56        Fangs | that's a possible 'function'                                                                                                                                                                                                                            │
11:34:24        Fangs | tangentstorm: just like how in maths you'll say not all vector spaces are list of k-tuples of real numbers                                                                                                                                              │
11:34:44        Fangs | (the set of differentiable function on the real numbers is a vector space, for example)                                                                                                                                                                 │
11:35:33        Fangs | (the set of polynomials in 1 variable is an example, its infinite dimensional. basis is 1, x, x^2, ..., and elements are written like 20+1x+2x^2)                                                                                                       │
11:36:02 tangentstorm | i mean, in J, you could write a function (*/) ... probably pronounced 'times table'... and 1 2 */ 3 4  -> [3 4][6 8]                                                                                                                                    │
11:36:22        Fangs | thats a possible model, yeah                                                                                                                                                                                                                            │
11:36:36        Fangs | this is where it kinda breaks down                                                                                                                                                                                                                      │
11:36:50        Fangs |  [[3,4],[6,8]] + [[1,2],[1,2]] how would you define this?                                                                                                                                                                                               │
11:37:02 tangentstorm | +                                                                                                                                                                                                                                                       │
11:37:15        Fangs |  [[3,4],[6,8]] + [[1,2],[1,2]] = ?                                                                                                                                                                                                                      │
11:37:22 tangentstorm | if you want it to be   [4 6] [7 10]                                                                                                                                                                                                                     │
11:37:41        Fangs | see, that's not allowed (or at least we don't want that)                                                                                                                                                                                                │
11:37:44        Fangs | in the tensor product, this is as simple as you can go (in terms of sums)                                                                                                                                                                               │
11:37:58        Fangs | you can do this though                                                                                                                                                                                                                                  │
11:38:18        Fangs |  [[3,4],[6,8]] + [[1,2],[6,8]] = p[4,6],[6,8][                                                                                                                                                                                                          │
11:38:21        Fangs | err                                                                                                                                                                                                                                                     │
11:38:25        Fangs |  [[3,4],[6,8]] + [[1,2],[6,8]] = [[4,6],[6,8]]                                                                                                                                                                                                          │
11:38:49        Fangs | v1(x)w + v2(x)w = (v1+v2)(x)w                                                                                                                                                                                                                           │
11:39:17        Fangs | tangentstorm: here's the motivation: in a bilinear map: T(v1,w)+T(v2,w) = T(v1+v2,w)                                                                                                                                                                    │
11:39:46        Fangs | so I can define an 'induced' lienar map on the tensor product T^:(v(x)w) = T(v,w) for every pair                                                                                                                                                        │
11:40:19 tangentstorm | but  T(v1,w1)+T(v2,w2) is undefined?                                                                                                                                                                                                                    │
11:40:46        Fangs | tangentstorm: I meant to say, if I have a bilinear map T, then T satisfies that property                                                                                                                                                                │
11:41:44 tangentstorm | but it does not necessarily have the property T(v1,w1)+T(v2,w2) = T(v1+v2,w1+w2)                                                                                                                                                                        │
11:41:45 tangentstorm | ?                                                                                                                                                                                                                                                       │
11:41:50        Fangs | yeah                                                                                                                                                                                                                                                    │
11:42:13        Fangs | T(v1+v2,w1+w2) = T(v1+v2,w1) + T(v1+v2,w2) since it is linear in the second slot                                                                                                                                                                        │
11:42:41        Fangs | T(v1+v2,w1) + T(v1+v2,w2) = T(v1,w1) + T(v2,w1) +  T(v1+v2,w2)  since it is linear in the first slot                                                                                                                                                    │
11:42:53        Fangs | (I didnt expand the second one cause I'm lazy and I think you know what to expect)                                                                                                                                                                      │
11:43:04        Fangs | bilinear: linear in every slot separately                                                                                                                                                                                                               │
11:43:32        Fangs | the dot product is an example of this kind of map                                                                                                                                                                                                       │
11:44:55        Fangs | so I want to define T^ on symbols like v(x)w so that it is linear (i.e. turn a bilinear map into a linear map)                                                                                                                                          │
11:45:16        Fangs | this is done in an obvious manner T^(v(x)w) = T(v,w)                                                                                                                                                                                                    │
11:46:22        Fangs | now lets examine some properties; since T is bilinear T^([v1+v2](x)w) = T(v1+v2,w) = T(v1,w) + T(v2,w)                                                                                                                                                  │
11:46:50        Fangs | T(v1,w) + T(v2,w) = T^(v1(x)w) + T^(v2(x)w)                                                                                                                                                                                                             │
11:47:25        Fangs | now, since we want T^ to be linear: T^(v1(x)w) + T^(v2(x)w) = T^(v1(x)w + v2(x)w)                                                                                                                                                                       │
11:48:00        Fangs | so if you allow: [v1+v2](x)w = v1(x)w + v2(x)w, this makes sure T^ satisfies the properties we want                                                                                                                                                     │
11:48:37        Fangs | so in a sense, you could think of V(x)W as the set of  sums of all bilinear symbols made up of vectors in V and W                                                                                                                                       
11:50:20        Fangs | this is the "right" mathematical way to think about these (in the sense that if you want to prove stuff involving tensor products, this lets you invoke these very useful properties when writting proofs)
11:50:49        Fangs | but its not the only 'right' way to think about it. computationally, that model with (*/) makes a lot more sense, esp if you have to actually work numerically                                                                                          │
11:51:34        Fangs | in physics they would say a tensor is something that transforms like a tensor (because they often need to change coordinates, and need to know how their tensor product 'quantieies' transform)                                                         
11:55:17        Fangs | T(v1,w1)+T(v2,w2) = T(v1+v2,w1+w2) <-- tangentstorm: really here you're just 'concatenating' vectors in V and vectors in W, and its linear in VxW, not bilinear in VxW                                                                                  
11:55:53        Fangs | (people usually write it as V(+)W read as 'direct sum of V and W', to distinguish it from the tensor product)
11:57:27        Fangs | ((1,2,3),(4,5)) ~ (1,2,3,4,5) in the direct sum, its a 2+3 = 5 dimensional space                                                                                                                                                                        │
11:57:40        Fangs | but if you don't allow those sums, the space is going to be 2*3 dimensional                                                                                                                                                                             
11:59:58        Fangs | [(0,0,1)(x)(0,1)], [(0,1,0)(x)(0,1)], [(1,0,0)(x)(0,1)], [(0,0,1)(x)(1,0)], [(0,1,0)(x)(1,0)], [(1,0,0)(x)(1,0)] if you don't allow those 'sums', then these are 'uncombinable' so you have 6 dimensions                                                
12:01:29 tangentstorm | this started with: 10:45:23        Fangs | but very often the same 'phenomenon' are described by different subjects differently, so there's a sense that these ideas are independent of the syntax]                                                     │
12:01:37 tangentstorm | 10:49:34        Fangs | I was going to say adjunction between two pairs of functors in some sense is an example of this                                                                                                                                 │
12:01:48        Fangs | I had to explain what a tensor product is                                                                                                                                                                                                               │
12:02:15 tangentstorm | so i think you are trying to explain to me what an adjunction is, and using 'tensor product' and a 'hom' as examples of two functors                                                                                                                    │
12:02:50        Fangs | tangentstorm: you can get away with not talking about tensor products and just state it as "Bilinear(V,W,Z) ~= Linear(V,Linear(W,Z))                                                                                                                    │
12:03:29        Fangs | "hom" is fancy math term of "LinearMaps(_,_)"                                                                                                                                                                                                           │
12:03:46        Fangs | the tensor product functor.. there's no avoiding that                                                                                                                                                                                                   │
12:03:47 tangentstorm | and a tensor product is this weird sum thing where you can only add the xth element of a pair of tuples if the yth element is the same.                                                                                                                 │
12:03:54        Fangs | yes                                                                                                                                                                                                                                                     │
12:04:01 tangentstorm | why isn't it called a tensor sum?                                                                                                                                                                                                                       │
12:04:32        Fangs | if V is 3 dimensional and W is 2 dimensional V(+)W is 5 dimensional                                                                                                                                                                                     │
12:04:39        Fangs | (you're concatenating the tuples)                                                                                                                                                                                                                       │
12:04:48        Fangs | tangentstorm: in the tensor product, its 6 dimensional                                                                                                                                                                                                  │
12:05:24        Fangs | so instead of adding dimensions, you're multiplying them together                                                                                                                                                                                       │
12:06:23        Fangs | tangentstorm: if you go down to set theory, there's a similar adjunction SetMaps(AxB,C) ~= SetMaps(A,SetMaps(B,C))                                                                                                                                      │
12:07:00        Fangs | if A has 3 elements and B has 2, then AxB, the set of tuples will have 6 elements, and we call this the cartesian product of sets                                                                                                                       │
12:07:36        Fangs | there's also something in algebra for other things, ditto in topology everytime we call it "___ product"                                                                                                                                                │
12:08:06        Fangs | at least the dimension reason and the 'number of element' reason seems to suggest its more natural to call it a product                                                                                                                                 │
12:08:25        Fangs | tangentstorm: in every single one of these cases, it boils down to currying your functions                                                                                                                                                              │
12:09:30 tangentstorm | and the relationship between the curried and uncurried flavors is called an 'adjunction'?                                                                                                                                                               │
12:10:10        Fangs | not every adjunction is "just currying" but "hom-tensor adjunctions" is so prevasive we call every single one of these by a single name. "hom-tensor adjunction".  Hom(_,_) is just a fancy way of saying "set of maps compatible whatever "type"       │
                      | (category) of objects you're talking about                                                                                                                                                                                                              │
12:10:17        Fangs | pervasive                                                                                                                                                                                                                                               │
12:11:03        Fangs | in the category of LinearSpaces, lets call the compatible 'functions' LinearMaps (I might abbriviate)                                                                                                                                                   │
12:11:15 tangentstorm | let's stop here :)                                                                                                                                                                                                                                      │
12:11:50        Fangs | ok I'll finish my thought                                                                                                                                                                                                                               │
12:12:07        Fangs | the hom tensor adjunction says: LinMaps(tensor, _) ~= LinMaps(_,hom)                                                                                                                                                                                    │
12:12:19 tangentstorm | i think i just got the gist of what you're saying. let me digest and re-read all this and maybe i can come back with some sensible questions. :)                                                                                                        │
12:12:29 tangentstorm | (but yes please finish your thought)                                                                                                                                                                                                                    │
12:12:42        Fangs | sure, that last line is just to let you identify where the functors "tensor" and "hom" are                                                                                                                                                              │
12:13:25        Fangs | an adjunction just means there's a one to one correspondence like that                                                                                                                                                                                  │
12:16:01 tangentstorm | thanks for taking the time to explain all this. i will re-read it and follow up. :)                                                                                                                                                                     │
12:16:11        Fangs | no worries                                                                                                                                                                                                                                              │
12:17:12        Fangs | I had another CS-centric person when I studied abstact algebra, and our lecturer was really wild with her category theory. it was rough and difficult, but me and the CS centric person just laughed when we realized this currying notion
12:17:38        Fangs | (I was just happy for once I had thee upper-hand over the maths students with physics background)                                                                                                                                                       
12:18:04 tangentstorm | lol :)                                                                                                                                                                                                                                                  
